{"version":3,"sources":["Card.js","utils.js","CardList.js","App.js","index.js"],"names":["Card","props","this","title","mainText","footerText","color","className","style","toLocaleString","Component","formatMillions","labelValue","Math","abs","Number","toFixed","CardList","country","useState","activeCases","recoveredCases","deaths","totalActiveCases","totalRecoveredCases","totalDeaths","cases","updateCases","useEffect","isCountry","fetch","then","res","json","find","x","recovered","todayCases","todayDeaths","todayRecovered","console","log","toUpperCase","App","padding","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSA0BeA,G,wDAnBb,WAAYC,GAAQ,uCACZA,G,qDAGC,MAEwCC,KAAKD,MAA5CE,EAFD,EAECA,MAAOC,EAFR,EAEQA,SAAUC,EAFlB,EAEkBA,WAAYC,EAF9B,EAE8BA,MAGrC,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,SAASJ,GACxB,yBAAKI,UAAU,YAAYC,MAAO,CAAEF,MAAOA,IAA3C,YAA0DF,EAASK,mBACnE,yBAAKF,UAAU,eAAf,UAAiCF,EAAWI,iBAA5C,gB,GAhBWC,cCJZ,SAASC,EAAeC,GAG3B,OAAOC,KAAKC,IAAIC,OAAOH,KAAgB,KAEpCC,KAAKC,IAAIC,OAAOH,IAAe,KAAQI,QAAQ,GAAK,IAErDH,KAAKC,IAAIC,OAAOH,KAAgB,KAE/BC,KAAKC,IAAIC,OAAOH,IAAe,KAAQI,QAAQ,GAAK,IAErDH,KAAKC,IAAIC,OAAOH,KAAgB,KAE/BC,KAAKC,IAAIC,OAAOH,IAAe,KAAQI,QAAQ,GAAK,IAErDH,KAAKC,IAAIC,OAAOH,I,MC2DPK,MAnEf,YAA8C,IAAD,IAAzBC,eAAyB,MAAf,YAAe,IAEhBC,mBAAS,CAClCC,YAAa,EACbC,eAAgB,EAChBC,OAAQ,EACRC,iBAAkB,EAClBC,oBAAqB,EACrBC,YAAa,IAR4B,mBAEtCC,EAFsC,KAE/BC,EAF+B,KAY3CC,qBAAU,WACR,IAAIC,EAAwB,cAAZX,EAkBhB,OAhBAY,MAAM,kCAAD,OADYD,EAAY,YAAc,QACWE,MAAK,SAACC,GAC1DA,EAAIC,OAAOF,MAAK,SAACE,GACC,IAAD,EAAXJ,IACFI,EAAI,UAAGA,EAAKC,MAAK,SAACC,GAAD,OAAOA,EAAEjB,SAAWA,YAAjC,QAA6CQ,GAF3B,MAIoDO,EAAtEP,EAJkB,EAIlBA,MAAOU,EAJW,EAIXA,UAAWd,EAJA,EAIAA,OAAQe,EAJR,EAIQA,WAAYC,EAJpB,EAIoBA,YAAaC,EAJjC,EAIiCA,eACzDZ,EAAY,CACVP,YAAaiB,EACbhB,eAAgBkB,EAChBjB,OAAQgB,EACRf,iBAAkBZ,EAAee,GACjCF,oBAAqBb,EAAeyB,GACpCX,YAAad,EAAeW,WAI3B,WAELkB,QAAQC,IAAI,gBAEb,IAGHb,qBAAU,WACRY,QAAQC,IAAI,wCACZD,QAAQC,IAAI,oCACX,CAACf,EAAMN,cAzCiC,IA2CnCA,EAA4FM,EAA5FN,YAAaC,EAA+EK,EAA/EL,eAAgBC,EAA+DI,EAA/DJ,OAAQC,EAAuDG,EAAvDH,iBAAkBE,EAAqCC,EAArCD,YAAaD,EAAwBE,EAAxBF,oBAE5E,OACE,yBAAKjB,UAAU,YACb,4BACGW,EAAQwB,eAEX,kBAAC,EAAD,CACEpC,MAAM,0BACNH,MAAM,oBACNC,SAAUgB,EACVf,WAAYkB,IAEd,kBAAC,EAAD,CACEjB,MAAM,0BACNH,MAAM,YACNC,SAAUiB,EACVhB,WAAYmB,IAEd,kBAAC,EAAD,CAAMlB,MAAM,qBAAqBH,MAAM,SAASC,SAAUkB,EAAQjB,WAAYoB,MCrDrEkB,MAbf,WAGE,OACE,yBAAKnC,MAAO,CAACoC,QAAS,KACpB,wBAAIpC,MAAO,CAACF,MAAM,QAASuC,OAAQ,KAAnC,mBACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAU3B,QAAQ,QAClB,kBAAC,EAAD,CAAUA,QAAQ,YCJxB4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c9c57afb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Card.css\";\n\n// Card component extended from class Component of react\nclass Card extends Component {\n  // Constructor is not used and can be removed\n  // it can be used to set some initial state\n  constructor(props) {\n    super(props);\n  }\n  // return a HTML for reactDOM to render\n  render() {\n    // Extarct the value from the props using destructors\n    const { title, mainText, footerText, color } = this.props;\n    // return the HTML snippet, inject values from received from props\n    // and apply styles to style the card\n    return (\n      <div className=\"card\">\n        <div className=\"title\">{title}</div>\n        <div className=\"main-text\" style={{ color: color }}>{`+ ${mainText.toLocaleString()}`}</div>\n        <div className=\"footer-text\">{`${footerText.toLocaleString()} total`}</div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","export function formatMillions(labelValue) {\n\n    // Nine Zeroes for Billions\n    return Math.abs(Number(labelValue)) >= 1.0e+9\n\n    ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(1) + \"B\"\n    // Six Zeroes for Millions \n    : Math.abs(Number(labelValue)) >= 1.0e+6\n\n    ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(1) + \"M\"\n    // Three Zeroes for Thousands\n    : Math.abs(Number(labelValue)) >= 1.0e+3\n\n    ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(1) + \"K\"\n\n    : Math.abs(Number(labelValue));\n\n}","import React, { Component, useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport { formatMillions } from \"./utils\";\nimport \"./cardList.css\";\n\n// Works same as class based component but used hooks\n// and effects for life cycle methods\nfunction CardList({ country = \"Worldwide\" }) {\n  // Create a state variable and save it to variables cases and updateCases\n  let [cases, updateCases] = useState({\n    activeCases: 0,\n    recoveredCases: 0,\n    deaths: 0,\n    totalActiveCases: 0,\n    totalRecoveredCases: 0,\n    totalDeaths: 0,\n  });\n\n  // This effect the serves the same purpouse as componentDidMount of class component\n  useEffect(() => {\n    let isCountry = country !== \"Worldwide\";\n    let dataSource = isCountry ? \"countries\" : \"all\";\n    fetch(`https://disease.sh/v3/covid-19/${dataSource}`).then((res) => {\n      res.json().then((json) => {\n        if (isCountry) {\n          json = json.find((x) => x.country == country) ?? cases;\n        }\n        let { cases, recovered, deaths, todayCases, todayDeaths, todayRecovered } = json;\n        updateCases({\n          activeCases: todayCases,\n          recoveredCases: todayRecovered,\n          deaths: todayDeaths,\n          totalActiveCases: formatMillions(cases),\n          totalRecoveredCases: formatMillions(recovered),\n          totalDeaths: formatMillions(deaths),\n        });\n      });\n    });\n    return () => {\n      // Unmounting\n      console.log(\"unmounted\");\n    };\n  }, []); // note we are not passing an empty array, suggesting it doesn't depend on any values\n\n  // Dummy effect used to show case onUpdate lifecycle hook\n  useEffect(() => {\n    console.log(\"I am called on update of any depency\");\n    console.log(\"In this case cases.activeCases\");\n  }, [cases.activeCases]);\n  // extarct the values from the state object cases\n  const { activeCases, recoveredCases, deaths, totalActiveCases, totalDeaths, totalRecoveredCases } = cases;\n  // render card for each information\n  return (\n    <div className=\"cardList\">\n      <h2>\n        {country.toUpperCase()}\n      </h2>\n      <Card\n        color=\"rgba(204, 16, 52, 0.64)\"\n        title=\"Coronavirus Cases\"\n        mainText={activeCases}\n        footerText={totalActiveCases}\n      />\n      <Card\n        color=\"rgba(62, 109, 21, 0.59)\"\n        title=\"Recovered\"\n        mainText={recoveredCases}\n        footerText={totalRecoveredCases}\n      />\n      <Card color=\"rgb(208, 167, 174)\" title=\"Deaths\" mainText={deaths} footerText={totalDeaths} />\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from \"react\";\nimport CardList from './CardList';\n\nfunction App() {\n  // Structure of your application\n  // Render the header and cardList component\n  return (\n    <div style={{padding: 16}}>\n      <h1 style={{color:\"#3333\", margin: 18}}>Covid19 Tracker</h1>\n      <CardList />\n      <CardList country=\"USA\"/>\n      <CardList country=\"India\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';  // import normal css to apply to body background color\nimport App from './App'; // import App \n\n// Render the react app imported and render the dom,\n// inside the element with id root in index.html\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}